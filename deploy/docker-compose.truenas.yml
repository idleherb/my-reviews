version: '3.8'

# Docker Compose for TrueNAS SCALE Deployment
# Replace /mnt/[your-pool] with your actual pool path

services:
  postgres:
    image: postgres:15-alpine
    container_name: myreviews-db
    environment:
      POSTGRES_DB: myreviews
      POSTGRES_USER: myreviews_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      # Data persistence - adjust path to your pool
      - /mnt/tank/apps/myreviews/postgres:/var/lib/postgresql/data
      # Auto-initialize database schema
      - /mnt/tank/apps/myreviews/config/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myreviews_user -d myreviews"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - myreviews-network

  api:
    # Replace with your Docker Hub username
    image: yourusername/myreviews-api:latest
    container_name: myreviews-api
    environment:
      DB_HOST: postgres  # Service name for internal communication
      DB_PORT: 5432
      DB_NAME: myreviews
      DB_USER: myreviews_user
      DB_PASSWORD: ${DB_PASSWORD:-changeme}
      PORT: 3000
      NODE_ENV: production
      CORS_ORIGIN: "*"
    volumes:
      # Avatar uploads persistence - adjust path
      - /mnt/tank/apps/myreviews/uploads:/app/uploads
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s  # Give time for database to initialize
    networks:
      - myreviews-network

networks:
  myreviews-network:
    driver: bridge

# Usage Instructions:
# 1. Create directories on TrueNAS:
#    mkdir -p /mnt/tank/apps/myreviews/{postgres,uploads,config}
# 
# 2. Copy schema.sql to config directory:
#    cp server/db/schema.sql /mnt/tank/apps/myreviews/config/
#
# 3. Set environment variable for database password:
#    export DB_PASSWORD="your-secure-password"
#
# 4. Deploy via TrueNAS Custom App or Portainer